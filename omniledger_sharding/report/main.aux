\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{kokoris-kogias_omniledger:_2018}
\citation{cryptoeprint:2016:1067}
\citation{dedis}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\newlabel{intro}{{1}{1}{Introduction}{section.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}OmniLedger}{1}{subsection.1.1}}
\citation{cothority}
\citation{onet}
\citation{protobuf}
\@writefile{toc}{\contentsline {section}{\numberline {2}Architecture}{3}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Cothority}{3}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}OmniLedger architecture}{3}{subsection.2.2}}
\citation{cli}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  The OmniLedger architecture. Elements in green were implemented in this project. Elements in blue were already part of the Cothority framework. Config contract is in both colours as some code was added to it. The cloud of shard ledgers is used to abstract communication for every shard ledger, it is meant to imply that the BC service communicates with each shard ledger individually for example. \relax }}{4}{figure.caption.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:architecture}{{1}{4}{The OmniLedger architecture. Elements in green were implemented in this project. Elements in blue were already part of the Cothority framework. Config contract is in both colours as some code was added to it. The cloud of shard ledgers is used to abstract communication for every shard ledger, it is meant to imply that the BC service communicates with each shard ledger individually for example. \relax }{figure.caption.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Identity Ledger \& Shard ledgers}{4}{subsubsection.2.2.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}CLI client}{4}{subsubsection.2.2.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.3}OmniLedger Client \& Service}{5}{subsubsection.2.2.3}}
\citation{smart_contracts}
\citation{kokoris-kogias_enhancing_2016}
\citation{cryptoeprint:2016:1067}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.4}OmniLedger client}{6}{subsubsection.2.2.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.5}ByzCoin Client \& Service}{6}{subsubsection.2.2.5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.6}Smart Contract and Instances}{6}{subsubsection.2.2.6}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Implementation}{6}{section.3}}
\newlabel{implementation}{{3}{6}{Implementation}{section.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Sharding assignment}{6}{subsection.3.1}}
\newlabel{sharding}{{3.1}{6}{Sharding assignment}{subsection.3.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  Example of a sharding assignment execution\relax }}{7}{figure.caption.3}}
\newlabel{fig:sharding1}{{2}{7}{Example of a sharding assignment execution\relax }{figure.caption.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Applying roster change}{7}{subsection.3.2}}
\newlabel{apply-roster-change}{{3.2}{7}{Applying roster change}{subsection.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  Another example of a sharding assignment execution where the concept of "fair" assignment is illustrated: nodes A and K are assigned to roster 1 and 2 respectively, instead of both being assigned to roster 1\relax }}{8}{figure.caption.4}}
\newlabel{fig:sharding2}{{3}{8}{Another example of a sharding assignment execution where the concept of "fair" assignment is illustrated: nodes A and K are assigned to roster 1 and 2 respectively, instead of both being assigned to roster 1\relax }{figure.caption.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Timestamps}{9}{subsection.3.3}}
\newlabel{timestamp}{{3.3}{9}{Timestamps}{subsection.3.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}OmniLedger creation}{9}{subsection.3.4}}
\newlabel{ol-creation}{{3.4}{9}{OmniLedger creation}{subsection.3.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}New epoch}{11}{subsection.3.5}}
\newlabel{new-epoch}{{3.5}{11}{New epoch}{subsection.3.5}{}}
\citation{testing}
\citation{onet}
\citation{testify}
\citation{libtest}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}Get status}{12}{subsection.3.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7}Testing}{12}{subsection.3.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.8}Documentation}{13}{subsection.3.8}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Challenges and Limitations}{13}{section.4}}
\newlabel{limitation}{{4}{13}{Challenges and Limitations}{section.4}{}}
\citation{cryptoeprint:2016:1067}
\citation{drand}
\citation{kokoris-kogias_omniledger:_2018}
\citation{borge_proof--personhood:_2017}
\citation{proof-of-stake}
\@writefile{toc}{\contentsline {section}{\numberline {5}Future work}{14}{section.5}}
\newlabel{secure-sharding}{{5}{14}{Future work}{section.5}{}}
\bibstyle{plain}
\bibdata{references}
\bibcite{cli}{1}
\@writefile{toc}{\contentsline {section}{\numberline {6}Installation}{15}{section.6}}
\bibcite{smart_contracts}{2}
\bibcite{libtest}{3}
\bibcite{onet}{4}
\bibcite{dedis}{5}
\bibcite{cothority}{6}
\bibcite{drand}{7}
\bibcite{proof-of-stake}{8}
\bibcite{protobuf}{9}
\bibcite{testify}{10}
\bibcite{testing}{11}
\bibcite{borge_proof--personhood:_2017}{12}
\bibcite{kokoris-kogias_enhancing_2016}{13}
\bibcite{kokoris-kogias_omniledger:_2018}{14}
\bibcite{cryptoeprint:2016:1067}{15}
\@writefile{toc}{\contentsline {section}{\numberline {A}Protocol diagrams}{17}{appendix.A}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces  Communication flow between the different components during the execution of a new OmniLedger creation. The numbers indicate in which step the communication occured.\relax }}{17}{figure.caption.6}}
\newlabel{fig:ol-creation}{{4}{17}{Communication flow between the different components during the execution of a new OmniLedger creation. The numbers indicate in which step the communication occured.\relax }{figure.caption.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces  Communication flow between the different components during the execution of a new epoch request. The numbers indicate in which step the communication occured.\relax }}{17}{figure.caption.7}}
\newlabel{fig:newepoch}{{5}{17}{Communication flow between the different components during the execution of a new epoch request. The numbers indicate in which step the communication occured.\relax }{figure.caption.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces  Communication flow between the different components during the execution of a get status request. The numbers indicate in which step the communication occured.\relax }}{18}{figure.caption.8}}
\newlabel{fig:getstatus}{{6}{18}{Communication flow between the different components during the execution of a get status request. The numbers indicate in which step the communication occured.\relax }{figure.caption.8}{}}
